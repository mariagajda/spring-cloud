version: '3'
services:
  zookeeper-server:
    image: wurstmeister/zookeeper
  kafka-server:
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-server
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-server:2181
  configuration-server:
    image: configuration-server
    restart: on-failure
#    ports:
#      - "8888:8888"
    environment:
      PORT: 8888
      GIT_URI: https://github.com/landrzejewski/spring-cloud
      KAFKA_BROKERS: kafka-server:9092
      ENCRYPT_KEY: SYMWWOQWCFEY
    deploy:
      replicas: 4
  discovery-server:
    image: discovery-server
    restart: on-failure
    ports:
      - "8761:8761"
    environment:
      PROFILES: production
      CONFIG_SERVER_URI: optional:configserver:http://configuration-server:8888



#  postgres-server:
#    image: postgres:15-alpine
#    ports:
#      - "5432:5432"
#    environment:
#      - POSTGRES_USER=admin
#      - POSTGRES_PASSWORD=admin
#      - POSTGRES_DB=shop
#    volumes:
#      - ./data/postgres:/var/lib/postgresql/data
#  mongo-server:
#    image: mongo
#    ports:
#      - "27017:27017"
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: "admin"
#      MONGO_INITDB_ROOT_PASSWORD: "admin"
#      MONGO_INITDB_ROOT_DATABASE: "payments"
#  elastic-server:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
#    restart: always
#    container_name: elasticsearch
#    environment:
#      discovery.type: "single-node"
#      bootstrap.memory_lock: "true"
#      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    ports:
#      - "9300:9300"
#      - "9200:9200"
#  logstash-server:
#    image: docker.elastic.co/logstash/logstash:7.14.1
#    restart: always
#    depends_on:
#      - elastic-server
#    container_name: logstash
#    command:
#      logstash -f /etc/logstash/conf.d/logstash.conf
#    volumes:
#      - ./configuration-files/logstash.conf:/etc/logstash/conf.d/logstash.conf
#    ports:
#      - "5000:5000"
#  kibana-server:
#    image: docker.elastic.co/kibana/kibana:7.14.1
#    restart: always
#    container_name: kibana
#    environment:
#      ELASTICSEARCH_URL: http://elastic-server:9300
#    ports:
#      - "5601:5601"
#  zipkin-server:
#    image: openzipkin/zipkin
#    ports:
#      - "9411:9411"
#    # 1) wsl -d docker-desktop
#    # 2) sysctl -w vm.max_map_count=262144
##    environment:
##      - STORAGE_TYPE=elasticsearch
##      # Point the zipkin at the storage backend
##      - ES_HOSTS=elasticsearch:9200
##      # Uncomment to see requests to and from elasticsearch
##      - ES_HTTP_LOGGING=BODY
#  alertmanager-server:
#    image: prom/alertmanager
#    restart: always
#    ports:
#      - "9093:9093"
#      - "6831:6831"
#    volumes:
#      - ./configuration-files/alertmanager.yml:/etc/prometheus/alertmanager.yml
#  prometheus-server:
#    image: prom/prometheus
#    restart: always
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./configuration-files/prometheus.yml:/etc/prometheus/prometheus.yml
#      - ./configuration-files/rules.yml:/etc/prometheus/rules.yml
#  grafana-server:
#    image: grafana/grafana
#    restart: always
#    ports:
#      - "3000:3000"
#    volumes:
#      - ./configuration-files/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
#  keycloak-server:
#    image: quay.io/keycloak/keycloak:22.0.3
#    command:
#      - start-dev
#    ports:
#      - "8100:8080"
#    environment:
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#      DB_VENDOR: "POSTGRES"
#      DB_ADDR: "postgres-server"
#      DB_USER: "admin"
#      DB_PASSWORD: "admin"
#      DB_DATABASE: "shop"
